---
---
<!doctype html>
<html>
  <head>
    <title>Floating UI Tutorial</title>
	<style>
		#toolTipTip {
			display: none;
			width: max-content;
			position: absolute;
			top: 0;
			left: 0;
			background: #222;
			color: white;
			font-weight: bold;
			padding: 5px;
			border-radius: 4px;
			font-size: 90%;
		}
		#toolTipArrow {
			position: absolute;
			background: #222;
			width: 8px;
			height: 8px;
			transform: rotate(45deg);
		}
	  </style>
  </head>
  <body>
    <span class="toolTipTool" aria-describedby="toolTip">
      My button
	
    	<span id="toolTipTip" role="toolTipTip">My toolTipTip<span id="toolTipArrow"></span></span>

	</span>
    <script type="module">
      // Your code will go here.
    </script>
  </body>
</html>

<script>
	import {
		computePosition,
		flip,
		shift,
		offset,
		arrow,
	} from 'https://cdn.jsdelivr.net/npm/@floating-ui/dom@1.6.13/+esm';
	
	const toolTipTool = document.querySelectorAll('.toolTipTool');
	const toolTipTip = document.querySelectorAll('#toolTipTip');
	const arrowElement = document.querySelectorAll('#toolTipArrow');

	////////console.log("toolTipTool");
	////////console.log(toolTipTool);
	////////console.log("toolTipTool[0]");
	////////console.log(toolTipTool[0]);
	
	function update() {
		computePosition(toolTipTool, toolTipTip, {
			placement: 'top',
			middleware: [
				offset(6),
				flip(),
				shift({padding: 5}),
				arrow({element: arrowElement}),
			],
		}).then(({x, y, placement, middlewareData}) => {
			Object.assign(toolTipTip.style, {
				left: `${x}px`,
				top: `${y}px`,
			});
			
			// Accessing the data
			const {x: arrowX, y: arrowY} = middlewareData.arrow;
			
			const staticSide = {
				top: 'bottom',
				right: 'left',
				bottom: 'top',
				left: 'right',
			}[placement.split('-')[0]];
			
			Object.assign(arrowElement.style, {
				left: arrowX != null ? `${arrowX}px` : '',
				top: arrowY != null ? `${arrowY}px` : '',
				right: '',
				bottom: '',
				[staticSide]: '-4px',
			});
		});
	}

	function showTooltip() {
		toolTipTip.style.display = 'block';
		update();
	}
 
	function hideTooltip() {
		toolTipTip.style.display = '';
	}
 
	[
		['mouseenter', showTooltip],
		['mouseleave', hideTooltip],
		['focus', showTooltip],
		['blur', hideTooltip],
	].forEach(([event, listener]) => {
		toolTipTool.addEventListener(event, listener);
	});
	
</script>